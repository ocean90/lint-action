/**
 * parse-diff
 * v0.7.0
 * https://github.com/sergeyt/parse-diff
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2014 Sergey Todyshev
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

var defaultToWhiteSpace,escapeRegExp,ltrim,makeString,parseFile,parseFileFallback,trimLeft,slice=[].slice;module.exports=function(e){var n,t,r,i,l,u,a,c,o,s,d,f;if(!e)return[];if(e.match(/^\s+$/))return[];if(0===(u=e.split("\n")).length)return[];for(r=[],t=null,c=0,a=0,n=null,s=function(){if(!t||t.chunks.length)return f()},d=[[/^\s+/,function(e){if(n)return n.changes.push({type:"normal",normal:!0,ln1:c++,ln2:a++,content:e})}],[/^diff\s/,f=function(e){var n;if(t={chunks:[],deletions:0,additions:0},r.push(t),!t.to&&!t.from&&(n=parseFile(e)))return t.from=n[0],t.to=n[1]}],[/^new file mode \d+$/,function(){return s(),t.new=!0,t.from="/dev/null"}],[/^deleted file mode \d+$/,function(){return s(),t.deleted=!0,t.to="/dev/null"}],[/^index\s[\da-zA-Z]+\.\.[\da-zA-Z]+(\s(\d+))?$/,function(e){return s(),t.index=e.split(" ").slice(1)}],[/^---\s/,function(e){return s(),t.from=parseFileFallback(e)}],[/^\+\+\+\s/,function(e){return s(),t.to=parseFileFallback(e)}],[/^@@\s+\-(\d+),?(\d+)?\s+\+(\d+),?(\d+)?\s@@/,function(e,r){var i,l,u,o;return c=o=+r[1],u=+(r[2]||1),a=l=+r[3],i=+(r[4]||1),n={content:e,changes:[],oldStart:o,oldLines:u,newStart:l,newLines:i},t.chunks.push(n)}],[/^-/,function(e){if(n)return n.changes.push({type:"del",del:!0,ln:c++,content:e}),t.deletions++}],[/^\+/,function(e){if(n)return n.changes.push({type:"add",add:!0,ln:a++,content:e}),t.additions++}],[/^\\ No newline at end of file$/,function(e){var t,r;return r=n.changes,[t]=slice.call(r,-1),n.changes.push({type:t.type,[`${t.type}`]:!0,ln1:t.ln1,ln2:t.ln2,ln:t.ln,content:e})}]],o=function(e){var n,t,r,i;for(n=0,t=d.length;n<t;n++)if(i=d[n],r=e.match(i[0]))return i[1](e,r),!0;return!1},i=0,l=u.length;i<l;i++)o(u[i]);return r},parseFile=function(e){var n;if(e)return(n=e.match(/a\/.*(?=["']? ["']?b\/)|b\/.*$/g)).map(function(e,t){return n[t]=e.replace(/^(a|b)\//,"").replace(/("|')$/,"")}),n},parseFileFallback=function(e){var n;return e=ltrim(e,"-"),e=(e=ltrim(e,"+")).trim(),(n=/\t.*|\d{4}-\d\d-\d\d\s\d\d:\d\d:\d\d(.\d+)?\s(\+|-)\d\d\d\d/.exec(e))&&(e=e.substring(0,n.index).trim()),e.match(/^(a|b)\//)?e.substr(2):e},ltrim=function(e,n){return e=makeString(e),!n&&trimLeft?trimLeft.call(e):(n=defaultToWhiteSpace(n),e.replace(new RegExp("^"+n+"+"),""))},makeString=function(e){return null===e?"":e+""},trimLeft=String.prototype.trimLeft,defaultToWhiteSpace=function(e){return null===e?"\\s":e.source?e.source:"["+escapeRegExp(e)+"]"},escapeRegExp=function(e){return makeString(e).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")};
