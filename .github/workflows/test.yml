name: Test

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      # Go

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13

      - name: Install Go dependencies
        run: |
          cd ./test/linters/projects/golint
          go get -u golang.org/x/lint/golint

      # Node.js

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install Node.js dependencies
        run: |
          cd ./test/linters/projects/eslint/
          yarn install
          cd ../eslint-typescript/
          yarn install
          cd ../prettier/
          yarn install
          cd ../stylelint/
          yarn install
          cd ../xo/
          yarn install

      # PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          coverage: none
          tools: phpcs

      # Python

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          cd ./test/linters/projects/
          pip install -r ./black/requirements.txt -r ./flake8/requirements.txt -r ./mypy/requirements.txt

      # Ruby

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install Ruby dependencies
        run: |
          gem install bundler
          cd ./test/linters/projects/rubocop/
          bundle install

      # Swift (only on Linux)

      - name: Install Swift dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          git clone --branch 0.50200.0 --depth 1 git://github.com/apple/swift-format
          cd swift-format
          swift build -c release
          echo "::add-path::${PWD}/.build/release"

      # Swift (only on macOS)

      - name: Install Swift dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install mint
          # If installed, unlink swiftlint, workaround for https://github.com/yonaskolb/Mint/issues/182
          brew unlink swiftlint || true
          cd ./test/linters/projects/swift-format-lockwood/
          mint bootstrap --link
          cd ../swiftlint/
          mint bootstrap --link

      # Tests

      - name: Run tests
        run: |
          yarn
          yarn test
